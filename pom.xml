<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.apache.camel.springboot</groupId>
		<artifactId>spring-boot</artifactId>
		<version>3.11.0</version>
	</parent>

	<groupId>ru.usque.camel.examples</groupId>
	<artifactId>examples</artifactId>
	<name>Camel Examples</name>
	<description>Camel Examples</description>
	<packaging>pom</packaging>

	<modules>
		<module>priceloader</module>
    </modules>

	<properties>
		<camel-version>3.11.0</camel-version>
		<skip.starting.camel.context>false</skip.starting.camel.context>
		<javax.servlet.api.version>4.0.1</javax.servlet.api.version>
		<fabric8-maven-plugin-version>4.4.1</fabric8-maven-plugin-version>
		<kafka-avro-serializer-version>5.2.2</kafka-avro-serializer-version>
		<reactor-version>3.2.16.RELEASE</reactor-version>
	</properties>

	<repositories>
		<repository>
			<id>apache.snapshots</id>
			<url>https://repository.apache.org/snapshots/</url>
			<name>Apache Snapshot Repo</name>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>apache.snapshots</id>
			<url>https://repository.apache.org/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<!--
			  CAMEL-13084 Fix the spring-boot examples start up error by overriding servlet API version from camel-parent
			  We need to clean it up once camel-parent upgrade the servlet api version.
			-->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet.api.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- update readme file -->
			<plugin>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-package-maven-plugin</artifactId>
				<version>${camel-version}</version>
				<configuration>
					<startingFolder></startingFolder>
					<filter>spring-boot</filter>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>prepare-example</goal>
						</goals>
						<phase>process-resources</phase>
					</execution>
				</executions>
			</plugin>

			<!-- to validate Camel endpoints: mvn camel-report:validate -->
			<plugin>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-report-maven-plugin</artifactId>
				<version>${camel-version}</version>
				<configuration>
					<failOnError>false</failOnError>
					<includeTest>true</includeTest>
					<includeXml>true</includeXml>
					<ignoreLenientProperties>false</ignoreLenientProperties>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<forkCount>1</forkCount>
					<reuseForks>false</reuseForks>
					<systemPropertyVariables>
						<skipStartingCamelContext>${skip.starting.camel.context}</skipStartingCamelContext>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>container-test</id>
			<properties>
				<skip.starting.camel.context>true</skip.starting.camel.context>
			</properties>
		</profile>
		<!--
		  This profile allows you to add a repository to the repo list so that
		  you can test the examples out against a staged version of the camel distribution
		-->
		<profile>
			<id>add-remote-repo</id>
			<activation>
				<property>
					<name>remoteRepo</name>
				</property>
			</activation>

			<repositories>
				<repository>
					<id>dynamic.repo</id>
					<name>Repository Dynamically Added Via the Command Line</name>
					<url>$remoteRepo</url>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>dynamic.repo</id>
					<name>Repository Dynamically Added Via the Command Line</name>
					<url>$remoteRepo</url>
				</pluginRepository>
			</pluginRepositories>

		</profile>
	</profiles>

</project>
